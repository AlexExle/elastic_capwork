using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Elasticsearch.Net;
using Microsoft.Extensions.Options;
using Nest;
using website.Configuration;
using website.DataLayer.Models;
using website.Models;

namespace website.DataLayer.Repository
{
    public class PlaysRepository : ElasticsearchBaseRepo<PlayModel>, ISearchableRepo<PlayModel>
    {
        public PlaysRepository(IElasticClient elasticClient, IOptions<ElasticConfig> config) : base(elasticClient, config)
        {
        }   
		
		public async Task<IEnumerable<PlayModel>> Search(string input, SelectSettings settings)
        {
            var res = await client.SearchAsync<PlayModel>(q =>
            {
                var query = q
                    .Preference(settings.Source.ToString())
                    .Type(config.PlaysDocType)
                    .Index(config.PlaysIndexName)
                    .ExecuteOnPrimary()
                    .Size(settings.Size)
                    .Sort(s => s.Field(settings.SortBy, settings.Order))
                    .Query(q1 => q1
                        .Bool(boolDescriptor => boolDescriptor
                            .Should(s1 => s1
                                .MultiMatch(mp => mp
                                    .Query(input)
                                    .Fields(f => f
                                        .Field(f1 => f1.Speaker, 2)
                                        .Fields(f2 => f2.TextEntry)))
                    )));                
                return query;
            });

            return res.Hits.Select(h => h.Source);
        }
    }
}

